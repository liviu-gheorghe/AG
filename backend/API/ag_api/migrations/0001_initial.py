# Generated by Django 3.0.3 on 2020-04-12 10:42

import ag_api.models
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lab',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=64)),
                ('short_description', models.TextField(max_length=128)),
                ('description', models.TextField(max_length=65536)),
                ('category', models.TextField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('c++', 'C++'), ('java', 'Java'), ('python', 'Python'), ('javascript', 'Javascript'), ('perl', 'Perl'), ('ruby', 'Ruby'), ('haskell', 'Haskell'), ('go', 'Go'), ('erlang', 'Erlang'), ('c#', 'C#'), ('bash', 'Bash'), ('php', 'PHP'), ('c', 'C'), ('objective-c', 'Objective-C')], max_length=16, unique=True)),
                ('description', models.TextField(max_length=1024, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('description', models.TextField(max_length=65536)),
                ('explanations_and_indications', models.TextField(blank=True, max_length=65536)),
                ('difficulty', models.TextField(choices=[('elementar', 'elementar'), ('usor', 'usor'), ('intermediar', 'intermediar'), ('dificil', 'dificil')], default='usor')),
                ('level', models.TextField(blank=True, choices=[('V', 'V'), ('VI', 'VI'), ('VII', 'VII'), ('VIII', 'VIII'), ('IX', 'IX'), ('X', 'X'), ('XI', 'XII'), ('XII', 'XII')], null=True)),
                ('std_input', models.TextField(max_length=1024)),
                ('std_output', models.TextField(max_length=1024)),
                ('restrictions', models.TextField(blank=True, max_length=1024)),
                ('tags', models.TextField(blank=True, max_length=64)),
                ('memory_limit', models.FloatField(default=16, help_text='MB', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(64.0)])),
                ('time_limit', models.FloatField(default=0.5, help_text='seconds', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('source', models.CharField(blank=True, max_length=64, null=True)),
                ('datetime_posted', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProblemTopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=32)),
                ('description', models.TextField(blank=True, max_length=65536)),
                ('difficulty', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
            ],
        ),
        migrations.CreateModel(
            name='Snippet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=65536, null=True)),
                ('snippet_type', models.CharField(choices=[('c++', 'C++'), ('java', 'Java'), ('python', 'Python'), ('javascript', 'Javascript'), ('perl', 'Perl'), ('ruby', 'Ruby'), ('haskell', 'Haskell'), ('go', 'Go'), ('erlang', 'Erlang'), ('c#', 'C#'), ('bash', 'Bash'), ('php', 'PHP'), ('c', 'C'), ('objective-c', 'Objective-C')], max_length=16, null=True)),
                ('default', models.BooleanField(default=False)),
                ('public', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tutorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=64)),
                ('short_description', models.TextField(max_length=128)),
                ('description', models.TextField(max_length=65536)),
                ('category', models.TextField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, max_length=1024)),
                ('interests', models.TextField(blank=True, max_length=1024)),
                ('profile_image', models.ImageField(blank=True, upload_to=ag_api.models.UserProfile.construct_path)),
                ('social_media_links', models.TextField(blank=True, max_length=64)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TutorialArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=64)),
                ('content', models.TextField(max_length=65536)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ag_api.Tutorial')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('std_input', models.TextField(max_length=1024, null=True)),
                ('std_output', models.TextField(max_length=65536, null=True)),
                ('related_problem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ag_api.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemSolution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_text', models.TextField(max_length=65536, null=True)),
                ('source_description', models.TextField(max_length=65536, null=True)),
                ('source_type', models.CharField(choices=[('c++', 'C++'), ('java', 'Java'), ('python', 'Python'), ('javascript', 'Javascript'), ('perl', 'Perl'), ('ruby', 'Ruby'), ('haskell', 'Haskell'), ('go', 'Go'), ('erlang', 'Erlang'), ('c#', 'C#'), ('bash', 'Bash'), ('php', 'PHP'), ('c', 'C'), ('objective-c', 'Objective-C')], max_length=16, null=True)),
                ('public', models.BooleanField(default=True)),
                ('score', models.IntegerField(null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('datetime_posted', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('problem', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ag_api.Problem')),
            ],
        ),
        migrations.AddField(
            model_name='problem',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ag_api.ProblemTopic'),
        ),
        migrations.CreateModel(
            name='LabTaskChoices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=1024)),
                ('answer_choices', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(max_length=256), null=True, size=None)),
                ('single_response', models.BooleanField(default=True)),
                ('correct_answers', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(null=True), null=True, size=None)),
                ('pre_task_command', models.TextField(blank=True, max_length=1024)),
                ('post_task_command', models.TextField(blank=True, max_length=1024)),
                ('indications', models.TextField(blank=True, max_length=1024)),
                ('lab', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ag_api.Lab')),
            ],
        ),
    ]
